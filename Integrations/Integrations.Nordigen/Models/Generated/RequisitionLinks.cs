/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Integrations.Nordigen.Models
{
    /// <summary>
    /// RequisitionLinksSerializer.
    /// </summary>
    [DataContract(Name = "RequisitionLinks")]
    public partial class RequisitionLinks : IEquatable<RequisitionLinks>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RequisitionLinks" /> class.
        /// </summary>
        [JsonConstructor]
        public RequisitionLinks()
        {
        }

        /// <summary>
        /// Gets or Sets Initiate
        /// </summary>
        [DataMember(Name = "initiate", EmitDefaultValue = false)]
        public string Initiate { get; private set; }

        /// <summary>
        /// Returns false as Initiate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeInitiate()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RequisitionLinks {\n");
            sb.Append("  Initiate: ").Append(Initiate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RequisitionLinks);
        }

        /// <summary>
        /// Returns true if RequisitionLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of RequisitionLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RequisitionLinks input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Initiate == input.Initiate ||
                    (this.Initiate != null &&
                    this.Initiate.Equals(input.Initiate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Initiate != null)
                {
                    hashCode = (hashCode * 59) + this.Initiate.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
