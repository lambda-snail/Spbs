/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Integrations.Nordigen.Models
{
    public partial class AccountV2
    {

        /// <summary>
        /// The processing status of this account.
        /// </summary>
        /// <value>The processing status of this account.</value>
        [JsonProperty("status")]
        public AccountV2StatusEnum? Status { get; set; }

        /// <summary>
        /// Returns false as Status should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeStatus()
        {
            return false;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountV2" /> class.
        /// </summary>
        [JsonConstructor]
        public AccountV2()
        {
        }

        /// <summary>
        /// The ID of this Account, used to refer to this account in other API calls.
        /// </summary>
        /// <value>The ID of this Account, used to refer to this account in other API calls.</value>
        [JsonProperty("id")]
        public Guid Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// The date &amp; time at which the account object was created.
        /// </summary>
        /// <value>The date &amp; time at which the account object was created.</value>
        [JsonProperty("created")]
        public DateTime Created { get; private set; }

        /// <summary>
        /// Returns false as Created should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreated()
        {
            return false;
        }
        /// <summary>
        /// The date &amp; time at which the account object was last accessed.
        /// </summary>
        /// <value>The date &amp; time at which the account object was last accessed.</value>
        [JsonProperty("last_accessed")]
        public DateTime? LastAccessed { get; private set; }

        /// <summary>
        /// Returns false as LastAccessed should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLastAccessed()
        {
            return false;
        }
        /// <summary>
        /// The Account IBAN
        /// </summary>
        /// <value>The Account IBAN</value>
        [JsonProperty("iban")]
        public string Iban { get; private set; }

        /// <summary>
        /// Returns false as Iban should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIban()
        {
            return false;
        }
        /// <summary>
        /// The ASPSP associated with this account.
        /// </summary>
        /// <value>The ASPSP associated with this account.</value>
        [JsonProperty("institution_id")]
        public string InstitutionId { get; private set; }

        /// <summary>
        /// Returns false as InstitutionId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeInstitutionId()
        {
            return false;
        }
        /// <summary>
        /// The name of the account owner.
        /// </summary>
        /// <value>The name of the account owner.</value>
        [JsonProperty("owner_name")]
        public string OwnerName { get; private set; }

        /// <summary>
        /// Returns false as OwnerName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOwnerName()
        {
            return false;
        }
        
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountV2 {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  LastAccessed: ").Append(LastAccessed).Append("\n");
            sb.Append("  Iban: ").Append(Iban).Append("\n");
            sb.Append("  InstitutionId: ").Append(InstitutionId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  OwnerName: ").Append(OwnerName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }
}
