@using global::Shared.Utilities
<MudOverlay Visible="@_doShowContent" DarkBackground="true" Class="d-flex align-content-end">

    <MudGrid style="height:100vh; width:100vw;">
        <MudItem Class="d-flex align-center justify-center mud-width-full" xs="12">

            <MudCard Class="pa-8 z-60" Elevation="3" Style="width: 50%; overflow: auto">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Recurring Expense</MudText>
                    <MudDivider Class="mb-4"/>

                    <MudForm @ref="@_form"
                             Model="@_editRecurringExpenseViewModel" ValidationDelay="0">

                        <MudGrid Spacing="1">
                            <MudItem xs="6">
                                <MudTextField @bind-Value="@_editRecurringExpenseViewModel.Name"
                                              Validation="@(async (string s) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.Name))"
                                              Label="Name"
                                              Variant="Variant.Text"
                                              Margin="Margin.Dense"/>
                            </MudItem>
                            <MudItem xs="6">
                                <MudCardActions>
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await HandleValidSubmit())">Save</MudButton>
                                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@CloseDialog">Close</MudButton>
                                </MudCardActions>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="@_editRecurringExpenseViewModel.Description"
                                              Validation="@(async (string s) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.Description))"
                                              Label="Description"
                                              Variant="Variant.Outlined"
                                              Lines="4"
                                              Margin="Margin.Dense"/>
                            </MudItem>

                            <MudItem xs="4">
                                <MudTooltip Text="The day of the month you expect the payment to occur" Delay="600">
                                    <MudNumericField Label="Billing Day"
                                                     Min="1"
                                                     Max="31"
                                                     Validation="@(async (int d) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.BillingDay))"
                                                     Editable="true"
                                                     @bind-Value="@_editRecurringExpenseViewModel.BillingDay"
                                                     Margin="Margin.Dense"/>
                                </MudTooltip>
                            </MudItem>
                            <MudItem xs="4">
                                <MudSelect T="BillingType"
                                           FullWidth="true"
                                           Label="Billing Type"
                                           Variant="Variant.Text"
                                           @bind-Value="@_editRecurringExpenseViewModel.BillingType"
                                           Margin="Margin.Dense"
                                           Style="width: 100%">
                                    <MudSelectItem Value="@BillingType.Monthly">Monthly</MudSelectItem>
                                    <MudSelectItem Value="@BillingType.Yearly">Yearly</MudSelectItem>
                                </MudSelect>

                            </MudItem>
                            <MudItem xs="4">
                                <MudSelect T="RecurrenceType"
                                           Label="Expense Type"
                                           Variant="Variant.Text"
                                           @bind-Value="@_editRecurringExpenseViewModel.RecurrenceType"
                                           Margin="Margin.Dense">
                                    <MudSelectItem Value="@RecurrenceType.Bill">Bill</MudSelectItem>
                                    <MudSelectItem Value="@RecurrenceType.Invoice">Invoice</MudSelectItem>
                                    <MudSelectItem Value="@RecurrenceType.Mortgage">Mortgage</MudSelectItem>
                                    <MudSelectItem Value="@RecurrenceType.Subscription">Subscription</MudSelectItem>
                                </MudSelect>
                                <MudDivider Class="mb-4"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="@_editRecurringExpenseViewModel.BillingPrincipal"
                                              Validation="@(async (string s) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.BillingPrincipal))"
                                              Label="Recipient"
                                              Variant="Variant.Text"
                                              Margin="Margin.Dense"/>
                            </MudItem>
                            <MudItem xs="6">
                                <MudTextField @bind-Value="@_editRecurringExpenseViewModel.Currency"
                                              Validation="@(async (string s) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.Currency))"
                                              Label="Currency"
                                              Variant="Variant.Text"
                                              Margin="Margin.Dense"/>
                            </MudItem>
                            <MudItem xs="6">
                                <MudNumericField @bind-Value="@_editRecurringExpenseViewModel.Total"
                                                 Validation="@(async (double d) => await _expenseValidator.ValidateValueAsync(_editRecurringExpenseViewModel, e => e.Total))"
                                                 Immediate="true"
                                                 Label="Total"
                                                 Variant="Variant.Text"
                                                 Margin="Margin.Dense"
                                                 Min="0.0"/>
                            </MudItem>


                        </MudGrid>
                    </MudForm>


                </MudCardContent>
            </MudCard>

        </MudItem>
    </MudGrid>

</MudOverlay>
@* *@
@* *@
@* @if (_doShowContent) *@
@* { *@
@*     <div class="modal fade show d-block" id="new-post-modal" tabindex="-1" role="dialog"> *@
@*         <div class="modal-dialog" role="document"> *@
@*             <div class="modal-content"> *@
@*                 <div class="modal-header"> *@
@*                     <h5 class="modal-title" id="titleLabel">Recurring Expense Editor</h5> *@
@*                     <button type="button" class="close" @onclick="@CloseDialog" data-dismiss="modal" aria-label="Close"> *@
@*                         <span aria-hidden="true">&times;</span> *@
@*                     </button> *@
@*                 </div> *@
@* *@
@*                 <div class="modal-body"> *@
@* *@
@*                     <EditForm Model="@_editRecurringExpenseViewModel" *@
@*                               OnValidSubmit="@HandleValidSubmit" *@
@*                               OnInvalidSubmit="@HandleInvalidSubmit"> *@
@* *@
@*                         <DataAnnotationsValidator/> *@
@*                         <ValidationSummary></ValidationSummary> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-name">Name</label> *@
@*                             <InputText id="expense-name" *@
@*                                        class="form-control" *@
@*                                        @bind-Value="@_editRecurringExpenseViewModel.Name"> *@
@*                             </InputText> *@
@*                             <small id="expense-name-small" class="form-text text-muted">Choose a descriptive name for the expense.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.Name)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-description">Description</label> *@
@*                             <InputTextArea id="expense-description" *@
@*                                            class="form-control" *@
@*                                            @bind-Value="@_editRecurringExpenseViewModel.Description"> *@
@*                             </InputTextArea> *@
@*                             <small id="expense-description-small" class="form-text text-muted">Add a description for the expense.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.Description)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-date">Billing Date</label> *@
@*                             <InputNumber id="expense-date" *@
@*                                          class="form-control" *@
@*                                          TValue="int" *@
@*                                          @bind-Value="@_editRecurringExpenseViewModel.BillingDay"> *@
@*                             </InputNumber> *@
@*                             <small id="post-date-small" class="form-text text-muted">Choose the day of the month when payment is due.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.BillingDay)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-venue">Recipient</label> *@
@*                             <InputText id="expense-venue" *@
@*                                        class="form-control" *@
@*                                        @bind-Value="@_editRecurringExpenseViewModel.BillingPrincipal"> *@
@*                             </InputText> *@
@*                             <small id="expense-venue-small" class="form-text text-muted">Which company or serice will recieve the payment?</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.BillingPrincipal)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-item-total">Total</label> *@
@*                             <InputNumber TValue="double" *@
@*                                          id="expense-item-total" *@
@*                                          class="form-control" *@
@*                                          @bind-Value="@_editRecurringExpenseViewModel.Total"> *@
@*                             </InputNumber> *@
@*                             <small id="expense-item-total-small" class="form-text text-muted">The amount billed each time.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.Total)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-currency">Currency</label> *@
@*                             <InputText id="expense-currency" *@
@*                                        class="form-control" *@
@*                                        @bind-Value="@_editRecurringExpenseViewModel.Currency"> *@
@*                             </InputText> *@
@*                             <small id="expense-currency-small" class="form-text text-muted">The currency that the purchase was made in.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.Currency)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-btype">Billing Type</label> *@
@*                             <InputSelect id="expense-btype" *@
@*                                          class="form-control" *@
@*                                          @bind-Value="@_editRecurringExpenseViewModel.RecurrenceType"> *@
@*                                 @foreach (var type in Enum.GetValues(typeof(RecurrenceType))) *@
@*                                 { *@
@*                                     <option value="@type">@type</option> *@
@*                                 } *@
@*                             </InputSelect> *@
@*                             <small id="expense-btype-small" class="form-text text-muted">The type of the recurring expense.</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.RecurrenceType)"/> *@
@*                         </div> *@
@* *@
@*                         <div class="form-group col-md-10"> *@
@*                             <label for="expense-rtype">Billing Frequency</label> *@
@*                             <InputSelect id="expense-rtype" *@
@*                                          class="form-control" *@
@*                                          @bind-Value="@_editRecurringExpenseViewModel.BillingType"> *@
@*                                 @foreach (var type in Enum.GetValues(typeof(BillingType))) *@
@*                                 { *@
@*                                     <option value="@type">@type</option> *@
@*                                 } *@
@*                             </InputSelect> *@
@*                             <small id="expense-rtype-small" class="form-text text-muted">Is the expense billed montly or annually?</small> *@
@*                             <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => _editRecurringExpenseViewModel.BillingType)"/> *@
@*                         </div> *@
@* *@
@*                         <button type="submit" class="btn btn-primary edit-btn">Submit</button> *@
@*                         <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@CloseDialog">Close</button> *@
@*                     </EditForm> *@
@*                 </div> *@
@* *@
@* *@
@*                 <div class="modal-footer"> *@
@* *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* } *@