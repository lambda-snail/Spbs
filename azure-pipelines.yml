trigger:
- master
- development

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
    
pool:
  vmImage: 'ubuntu-latest'
  
stages:
  - stage: Build
    jobs:
    - job: Build
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk 7.x'
        inputs:
          packageType: 'sdk'
          version: 7.x
        
      - task: DotNetCoreCLI@2
        displayName: 'Restore'
        inputs:
          command: restore
          projects: '**/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: 'Build'
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration) --no-restore'
    
      - task: DotNetCoreCLI@2
        displayName: 'Run Tests'
        inputs:
          command: test
          projects: '**/*[Tt]ests/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Package Code'
        inputs:
          command: publish
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
          
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'

  - stage: Deployment
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
    - job: Deploy
      steps:
      - checkout: none
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)'
          cleanDestinationFolder: true

      - task: AzureAppConfiguration@6
        inputs:
          azureSubscription: 'sc-az-spbs-prod'
          AppConfigurationEndpoint: '$(app-config-url)'
          KeyFilter: 'Spbs:Build:*'
          Label: 'Production'
          TrimKeyPrefix: |
            Spbs
            Build

      - task: CmdLine@2
        inputs:
          script: |
            echo $(AppServicePlanName)

      - script: ${env:AppServicePlanName}

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Deploy Using Template'
        inputs:
          azureResourceManagerConnection: 'sc-az-spbs-prod'
          subscriptionId: '$(subscription-id)'
          resourceGroupName: '$(resource-group)'
          location: 'Sweden Central'
          csmFile: '$(System.ArtifactsDirectory)/Spbs/Infrastructure/main.bicep'
          #csmParametersFile: '$(System.ArtifactsDirectory)/Spbs/Infrastructure/main.parameters.json'
          overrideParameters: '-webAppName $(web-app-name) -appServicePlanName $(app-service-plan-name) -location "Sweden Central"'


#
#Batch script: %SUBSCRIPTION-ID%
#PowerShell script: ${env:SUBSCRIPTION-ID}
#Bash script: $(SUBSCRIPTION-ID)
#
#variables:
#  subscriptionId: ''
#  name: 'func-crm-geolocation-dev'
#  location: 'West Europe'
#  hostingPlanName: 'asp-rgcrmgeolocation'
#  serverFarmResourceGroup: 'rg-crm-geolocation'
#  storageAccountName: 'stgcrmgeolocationdev'
#  CosmosDbConnectionString: 'AccountEndpoint=https://cosmos-crm-geolocation.documents.azure.com:443/;AccountKey=EDXk9w9V5R75Uov2nSK6hxEkQabf1Gk8mM51ZZIQLqQpF8Zh0eu5L2koKob5qjYs9kiaenCX5uz9VvrhEmGX6A==;'
#  CosmosDbCollectionName: 'locations'
#  CosmosDbName: 'cosmos-crm-geolocation'
#  WorkspaceNameParameter: 'DefaultWorkspace-d64b37dd-6c05-41e4-beaf-72f995fc1f29-WEU'
#  WorkspaceResourceIdParameter: '/subscriptions/d64b37dd-6c05-41e4-beaf-72f995fc1f29/resourceGroups/DefaultResourceGroup-WEU/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-d64b37dd-6c05-41e4-beaf-72f995fc1f29-WEU'
#
#steps:
#  - task: AzureResourceManagerTemplateDeployment@3
#    displayName: 'Deploy Using Arm Template'
#    inputs:
#      azureResourceManagerConnection:
#      subscriptionId: 'd64b37dd-6c05-41e4-beaf-72f995fc1f29'
#      resourceGroupName: 'rg-crm-geolocation'
#      location: 'West Europe'
#      csmFile: '$(System.DefaultWorkingDirectory)/Github Drops/Azure.ArmTemplates/azuredeploy.json'
#      csmParametersFile: '$(System.DefaultWorkingDirectory)/Github Drops/Azure.ArmTemplates/azuredeploy.parameters.json'
#      overrideParameters: '-subscriptionId $(subscriptionId) -name $(name) -location "$(location)" -hostingPlanName $(hostingPlanName) -serverFarmResourceGroup $(serverFarmResourceGroup) -storageAccountName $(storageAccountName) -CosmosDbConnectionStringParameter $(CosmosDbConnectionString) -CosmosDbCollectionNameParameter $(CosmosDbCollectionName) -CosmosDbNameParameter $(CosmosDbName) -WorkspaceNameParameter $(WorkspaceNameParameter) -WorkspaceResourceIdParameter $(WorkspaceResourceIdParameter)'
