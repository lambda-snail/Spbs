trigger:
- master
- development

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Production'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

steps:
- task: DotNetCoreCLI@2
  displayName: 'DotNet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'DotNet Build'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --arch $(buildPlatform) --norestore'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Test'
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'

- ${{ if eq(variables.isMain, 'true') }}:
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'